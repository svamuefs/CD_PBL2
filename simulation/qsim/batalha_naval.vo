// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 22.1std.2 Build 922 07/20/2023 SC Lite Edition"

// DATE "12/11/2023 20:38:40"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for Questa Intel FPGA (Verilog) only
// 

`timescale 1 ps/ 1 ps

module sync_freq_divider (
	clk,
	enable,
	final_clk);
input 	clk;
input 	enable;
output 	final_clk;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \enable~combout ;
wire \tff0|out~regout ;
wire \tff1|out~regout ;
wire \tff2|out~regout ;
wire \tff3|out~regout ;


// Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \enable~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\enable~combout ),
	.padio(enable));
// synopsys translate_off
defparam \enable~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y3_N0
maxii_lcell \tff0|out (
// Equation(s):
// \tff0|out~regout  = DFFEAS((((!\tff0|out~regout ))), GLOBAL(\clk~combout ), GLOBAL(\enable~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\tff0|out~regout ),
	.datad(vcc),
	.aclr(!\enable~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\tff0|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \tff0|out .lut_mask = "0f0f";
defparam \tff0|out .operation_mode = "normal";
defparam \tff0|out .output_mode = "reg_only";
defparam \tff0|out .register_cascade_mode = "off";
defparam \tff0|out .sum_lutc_input = "datac";
defparam \tff0|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N9
maxii_lcell \tff1|out (
// Equation(s):
// \tff1|out~regout  = DFFEAS(((\tff0|out~regout  $ (\tff1|out~regout ))), GLOBAL(\clk~combout ), GLOBAL(\enable~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\tff0|out~regout ),
	.datad(\tff1|out~regout ),
	.aclr(!\enable~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\tff1|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \tff1|out .lut_mask = "0ff0";
defparam \tff1|out .operation_mode = "normal";
defparam \tff1|out .output_mode = "reg_only";
defparam \tff1|out .register_cascade_mode = "off";
defparam \tff1|out .sum_lutc_input = "datac";
defparam \tff1|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N2
maxii_lcell \tff2|out (
// Equation(s):
// \tff2|out~regout  = DFFEAS((\tff2|out~regout  $ (((\tff0|out~regout  & \tff1|out~regout )))), GLOBAL(\clk~combout ), GLOBAL(\enable~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\tff2|out~regout ),
	.datac(\tff0|out~regout ),
	.datad(\tff1|out~regout ),
	.aclr(!\enable~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\tff2|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \tff2|out .lut_mask = "3ccc";
defparam \tff2|out .operation_mode = "normal";
defparam \tff2|out .output_mode = "reg_only";
defparam \tff2|out .register_cascade_mode = "off";
defparam \tff2|out .sum_lutc_input = "datac";
defparam \tff2|out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N4
maxii_lcell \tff3|out (
// Equation(s):
// \tff3|out~regout  = DFFEAS(\tff3|out~regout  $ (((\tff1|out~regout  & (\tff0|out~regout  & \tff2|out~regout )))), GLOBAL(\clk~combout ), GLOBAL(\enable~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\tff3|out~regout ),
	.datab(\tff1|out~regout ),
	.datac(\tff0|out~regout ),
	.datad(\tff2|out~regout ),
	.aclr(!\enable~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\tff3|out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \tff3|out .lut_mask = "6aaa";
defparam \tff3|out .operation_mode = "normal";
defparam \tff3|out .output_mode = "reg_only";
defparam \tff3|out .register_cascade_mode = "off";
defparam \tff3|out .sum_lutc_input = "datac";
defparam \tff3|out .synch_mode = "off";
// synopsys translate_on

// Location: PIN_6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \final_clk~I (
	.datain(\tff3|out~regout ),
	.oe(vcc),
	.combout(),
	.padio(final_clk));
// synopsys translate_off
defparam \final_clk~I .operation_mode = "output";
// synopsys translate_on

endmodule
